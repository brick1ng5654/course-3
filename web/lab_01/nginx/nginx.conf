events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Upstream –¥–ª—è Node.js
    upstream nodeapp {
        server nodeapp:3000;
    }

    # üîí HTTPS —Å–µ—Ä–≤–µ—Ä
    server {
        listen 443 ssl;
        server_name localhost;

        # SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        
        # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
        }

        # –õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è
        location /locales/ {
            root /usr/share/nginx/html;
            try_files $uri $uri/ =404;
        }

        # CSS –∏ JS
        location ~* \.(css|js)$ {
            root /usr/share/nginx/html;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # –ü—Ä–æ–∫—Å–∏ –Ω–∞ Node.js
        location /process {
            proxy_pass http://nodeapp;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /cookies {
            proxy_pass http://nodeapp;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # üîÑ HTTP ‚Üí HTTPS —Ä–µ–¥–∏—Ä–µ–∫—Ç
    server {
        listen 80;
        server_name localhost;
        return 301 https://$host$request_uri;
    }
}