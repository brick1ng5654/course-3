// –ò–º–ø–æ—Ä—Ç –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –º–æ–¥—É–ª–µ–π Node.js
const http = require('http');      // –ú–æ–¥—É–ª—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è HTTP-—Å–µ—Ä–≤–µ—Ä–∞
const url = require('url');        // –ú–æ–¥—É–ª—å –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ URL
const fs = require('fs');          // –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π
const path = require('path');      // –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—É—Ç—è–º–∏ —Ñ–∞–π–ª–æ–≤

// üîß –°–æ–∑–¥–∞–Ω–∏–µ HTTP-—Å–µ—Ä–≤–µ—Ä–∞
// –°–µ—Ä–≤–µ—Ä –±—É–¥–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –í–°–ï –≤—Ö–æ–¥—è—â–∏–µ HTTP-–∑–∞–ø—Ä–æ—Å—ã
const server = http.createServer((req, res) => {
    // üì® –õ–æ–≥–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    console.log('üì® –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å:', req.method, req.url);
    
    // üîç –ü–∞—Ä—Å–∏–º URL –∑–∞–ø—Ä–æ—Å–∞
    // parsedUrl.query —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å—Ç—Ä–æ–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ (?name=value&age=123)
    const parsedUrl = url.parse(req.url, true);
    
    // üéØ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã - –ì–õ–ê–í–ù–ê–Ø –õ–û–ì–ò–ö–ê –õ–ê–ë–û–†–ê–¢–û–†–ù–û–ô
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º: –∑–∞–ø—Ä–æ—Å –∫ /process –ò –º–µ—Ç–æ–¥ GET (–¥–∞–Ω–Ω—ã–µ –≤ URL)
    if (parsedUrl.pathname === '/process' && req.method === 'GET') {
        console.log('‚úÖ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É —Å –¥–∞–Ω–Ω—ã–º–∏:', parsedUrl.query);
        
        // üì• –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        // || '–∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é' - –µ—Å–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω
        const name = parsedUrl.query.name || '–±–µ–∑ –∏–º–µ–Ω–∏';
        const email = parsedUrl.query.email || '–Ω–µ —É–∫–∞–∑–∞–Ω';
        const age = parsedUrl.query.age || '–Ω–µ —É–∫–∞–∑–∞–Ω';
        const lang = parsedUrl.query.lang || 'ru';

        // ‚ö†Ô∏è –í–ê–õ–ò–î–ê–¶–ò–Ø –î–ê–ù–ù–´–• - –≤–∞–∂–Ω–∞—è —á–∞—Å—Ç—å –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π!
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
        if (!name || name.trim() === '') {
            // –ï—Å–ª–∏ –∏–º—è –ø—É—Å—Ç–æ–µ - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É 400 (Bad Request)
            res.writeHead(400, {'Content-Type': 'text/html; charset=utf-8'});
            return res.end('–û—à–∏–±–∫–∞: –ò–º—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ');
        }

        // üé® –§–æ—Ä–º–∏—Ä—É–µ–º HTML-—Å—Ç—Ä–∞–Ω–∏—Ü—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
        // –≠—Ç–æ –∞–Ω–∞–ª–æ–≥ JSP-—Å—Ç—Ä–∞–Ω–∏—Ü—ã - –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è HTML
        const resultHtml = `
        <!DOCTYPE html>
        <html>
        <head>
            <title>–†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏</title>
            <!-- –ü–æ–¥–∫–ª—é—á–∞–µ–º Bootstrap –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è -->
            <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
        </head>
        <body>
            <div class="container mt-5">
                <div class="card">
                    <!-- –®–∞–ø–∫–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ —Å —É—Å–ø–µ—à–Ω—ã–º —Å—Ç–∞—Ç—É—Å–æ–º -->
                    <div class="card-header bg-success text-white">
                        <h4>‚úÖ –î–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã!</h4>
                    </div>
                    <div class="card-body">
                        <!-- üìä –í—ã–≤–æ–¥–∏–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ -->
                        <!-- ${variable} - –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö (–∞–Ω–∞–ª–æ–≥ JSP Expression Language) -->
                        <p><strong>–ò–º—è:</strong> ${name}</p>
                        <p><strong>Email:</strong> ${email}</p>
                        <p><strong>–í–æ–∑—Ä–∞—Å—Ç:</strong> ${age}</p>
                        <!-- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ -->
                        <p><strong>–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ:</strong> ${new Date().toLocaleString('ru-RU')}</p>
                        <!-- –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞ –≥–ª–∞–≤–Ω—É—é -->
                        <a href="/" class="btn btn-primary">–ù–∞–∑–∞–¥ –∫ —Ñ–æ—Ä–º–µ</a>
                    </div>
                </div>
            </div>
        </body>
        </html>
        `;

        // üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
        // 200 - OK, Content-Type - —É–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ —ç—Ç–æ HTML —Å UTF-8 –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π
        res.writeHead(200, {'Content-Type': 'text/html; charset=utf-8'});
        res.end(resultHtml); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π HTML
        console.log('‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω');
        return; // –ó–∞–≤–µ—Ä—à–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —ç—Ç–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    }

    // ‚ùå –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–µ –∫ /process - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º 404 (Not Found)
    // –≠—Ç–æ –±–∞–∑–æ–≤–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
    res.writeHead(404);
    res.end('Not Found');
});

// üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
// –°–ª—É—à–∞–µ–º –ø–æ—Ä—Ç 3000 –Ω–∞ –≤—Å–µ—Ö —Å–µ—Ç–µ–≤—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞—Ö (0.0.0.0)
server.listen(3000, '0.0.0.0', () => {
    console.log('üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://0.0.0.0:3000');
    console.log('üìù –î–æ—Å—Ç—É–ø–Ω—ã–µ endpoints:');
    console.log('   GET /              - –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å —Ñ–æ—Ä–º–æ–π');
    console.log('   GET /process       - –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã');
});