const http = require('http');
const url = require('url');
const fs = require('fs');
const path = require('path');

// –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const users = {
    'admin': 'password123',
    'user': 'user123',
    'test': 'test123'
};

// –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–µ—Å—Å–∏–π (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ - –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö)
const sessions = {};

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
function checkAuth(authHeader) {
    if (!authHeader) return false;
    
    try {
        const base64Credentials = authHeader.split(' ')[1];
        const credentials = Buffer.from(base64Credentials, 'base64').toString('utf-8');
        const [username, password] = credentials.split(':');
        return users[username] && users[username] === password;
    } catch (error) {
        return false;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ Cookie
function parseCookies(cookieHeader) {
    const cookies = {};
    if (cookieHeader) {
        cookieHeader.split(';').forEach(cookie => {
            const [name, value] = cookie.trim().split('=');
            if (name && value) {
                cookies[name] = decodeURIComponent(value);
            }
        });
    }
    return cookies;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Cookie 
function setCookie(res, name, value, options = {}) {
    let cookie = `${name}=${encodeURIComponent(value)}`; 
    
    if (options.maxAge) cookie += `; Max-Age=${options.maxAge}`;
    if (options.path) cookie += `; Path=${options.path}`;
    if (options.httpOnly) cookie += `; HttpOnly`;
    if (options.sameSite) cookie += `; SameSite=${options.sameSite}`;
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ Cookie –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π
    const currentCookies = res.getHeader('Set-Cookie') || [];
    if (typeof currentCookies === 'string') {
        res.setHeader('Set-Cookie', [currentCookies, cookie]);
    } else {
        res.setHeader('Set-Cookie', [...currentCookies, cookie]);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–µ—Å—Å–∏—è–º–∏
function handleSession(req, res) {
    const cookies = parseCookies(req.headers.cookie);
    let sessionId = cookies.sessionId;
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é –µ—Å–ª–∏ –Ω–µ—Ç
    if (!sessionId || !sessions[sessionId]) {
        sessionId = 'session_' + Math.random().toString(36).substr(2, 9);
        sessions[sessionId] = {
            visitCount: 0,
            lastVisit: null,
            createdAt: new Date(),
            sessionId: sessionId
        };
        setCookie(res, 'sessionId', sessionId, { 
            maxAge: 3600, 
            path: '/',
            httpOnly: true,
            sameSite: 'Lax'
        });
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å–µ—â–µ–Ω–∏–π
    const session = sessions[sessionId];
    session.visitCount++;
    session.lastVisit = new Date().toLocaleString('ru-RU');
    
    return session;
}

const server = http.createServer((req, res) => {
    console.log('–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å:', req.method, req.url);
    
    const parsedUrl = url.parse(req.url, true);
    
    // –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
    if (parsedUrl.pathname.startsWith('/css/') || 
        parsedUrl.pathname.startsWith('/js/') || 
        parsedUrl.pathname.startsWith('/img/') ||
        parsedUrl.pathname.startsWith('/locales/')) {
        
        const filePath = path.join(__dirname, '../custom', parsedUrl.pathname);
        fs.readFile(filePath, (err, data) => {
            if (err) {
                res.writeHead(404);
                res.end('Not Found');
            } else {
                let contentType = 'text/html';
                if (parsedUrl.pathname.endsWith('.css')) contentType = 'text/css';
                if (parsedUrl.pathname.endsWith('.js')) contentType = 'application/javascript';
                if (parsedUrl.pathname.endsWith('.png')) contentType = 'image/png';
                if (parsedUrl.pathname.endsWith('.jpg')) contentType = 'image/jpeg';
                
                res.writeHead(200, {'Content-Type': contentType});
                res.end(data);
            }
        });
        return;
    }

    // –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    if (parsedUrl.pathname === '/' && req.method === 'GET') {
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é
        const session = handleSession(req, res);
        console.log('–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞. –°–µ—Å—Å–∏—è:', session.sessionId, '–ü–æ—Å–µ—â–µ–Ω–∏–π:', session.visitCount);
        
        const filePath = path.join(__dirname, '../custom/index.html');
        fs.readFile(filePath, 'utf8', (err, data) => {
            if (err) {
                res.writeHead(404);
                res.end('Not Found');
            } else {
                res.writeHead(200, {'Content-Type': 'text/html; charset=utf-8'});
                res.end(data);
            }
        });
        return;
    }

    // –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ Cookie
    
if (parsedUrl.pathname === '/cookies' && req.method === 'GET') {
    const session = handleSession(req, res);
    const cookies = parseCookies(req.headers.cookie);
    
    console.log('–°—Ç—Ä–∞–Ω–∏—Ü–∞ Cookie. –í—Å–µ Cookie:', cookies);
    
    const cookiesHtml = `
    <!DOCTYPE html>
    <html lang="ru">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>–ü—Ä–æ—Å–º–æ—Ç—Ä Cookie</title>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.8/dist/css/bootstrap.min.css" rel="stylesheet">
        <style>
            .cookie-item { border-left: 4px solid #28a745; padding-left: 15px; margin-bottom: 10px; }
            .session-item { border-left: 4px solid #007bff; padding-left: 15px; margin-bottom: 10px; }
        </style>
    </head>
    <body class="bg-light">
        <div class="container mt-5">
            <div class="card shadow-lg">
                <div class="card-header bg-info text-white">
                    <h4 class="mb-0">–ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö Cookie –∏ —Å–µ—Å—Å–∏–∏</h4>
                </div>
                <div class="card-body">
                    
                    <!-- Cookie -->
                    <h5 class="mt-3">Cookie –≤ –±—Ä–∞—É–∑–µ—Ä–µ:</h5>
                    <div class="mb-4">
                        ${Object.entries(cookies).length > 0 ? 
                            Object.entries(cookies).map(([key, value]) => `
                                <div class="cookie-item">
                                    <strong>${key}:</strong> ${value}
                                </div>
                            `).join('') : 
                            '<p class="text-muted">Cookie –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>'
                        }
                    </div>

                    <!-- –°–µ—Å—Å–∏—è -->
                    <h5 class="mt-4">–î–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏:</h5>
                    <div class="mb-4">
                        <div class="session-item">
                            <strong>ID —Å–µ—Å—Å–∏–∏:</strong> ${session.sessionId}
                        </div>
                        <div class="session-item">
                            <strong>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å–µ—â–µ–Ω–∏–π:</strong> ${session.visitCount}
                        </div>
                        <div class="session-item">
                            <strong>–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–∏–∑–∏—Ç:</strong> ${session.lastVisit}
                        </div>
                        <div class="session-item">
                            <strong>–°–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞:</strong> ${session.createdAt.toLocaleString('ru-RU')}
                        </div>
                    </div>

                    <!-- –í—Å–µ Cookie –≤ raw —Ñ–æ—Ä–º–∞—Ç–µ -->
                    <h5 class="mt-4"> –í—Å–µ Cookie (—Å—ã—Ä–æ–π –≤–∏–¥):</h5>
                    <pre class="bg-dark text-light p-3 rounded">${req.headers.cookie || 'Cookie –Ω–µ –Ω–∞–π–¥–µ–Ω—ã'}</pre>

                    <div class="mt-4">
                        <button onclick="refreshPage()" class="btn btn-primary"> –û–±–Ω–æ–≤–∏—Ç—å</button>
                        <button onclick="clearAllCookies()" class="btn btn-danger"> –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ Cookie</button>
                        <a href="/" class="btn btn-success"> –ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–æ—Ä–º—É</a>
                        <a href="/process?name=Test&email=test@test.com&age=25&color=text-danger&lang=ru" 
                           class="btn btn-warning"> –¢–µ—Å—Ç —Ñ–æ—Ä–º—ã (—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π)</a>
                    </div>
                </div>
            </div>
        </div>

        <script>
            function refreshPage() {
                location.reload();
            }

            function clearAllCookies() {
                if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –í–°–ï Cookie?')) {
                    document.cookie.split(";").forEach(cookie => {
                        const cookieName = cookie.split('=')[0].trim();
                        document.cookie = \`\${cookieName}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\`;
                    });
                    alert('–í—Å–µ Cookie –æ—á–∏—â–µ–Ω—ã! –°—Ç—Ä–∞–Ω–∏—Ü–∞ –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞.');
                    location.reload();
                }
            }

            // –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            console.log('üç™ –¢–µ–∫—É—â–∏–µ Cookie:', document.cookie);
            console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Å—Å–∏–∏:', ${JSON.stringify(session)});
            console.log('üîç –í—Å–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ Cookie:', '${req.headers.cookie}');
        </script>
    </body>
    </html>
    `;

    res.writeHead(200, {'Content-Type': 'text/html; charset=utf-8'});
    res.end(cookiesHtml);
    return;
}

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã (–∑–∞—â–∏—â–µ–Ω–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π)
    if (parsedUrl.pathname === '/process' && req.method === 'GET') {
        // –ü–†–û–í–ï–†–ö–ê –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–ò
        if (!checkAuth(req.headers.authorization)) {
            res.writeHead(401, {
                'Content-Type': 'text/html; charset=utf-8',
                'WWW-Authenticate': 'Basic realm="Secure Video Area"'
            });
            return res.end(`
                <!DOCTYPE html>
                <html>
                <head>
                    <title>–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</title>
                    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.8/dist/css/bootstrap.min.css" rel="stylesheet">
                </head>
                <body class="bg-light">
                    <div class="container mt-5">
                        <div class="card shadow-lg">
                            <div class="card-header bg-warning text-dark">
                                <h4 class="mb-0">–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</h4>
                            </div>
                            <div class="card-body text-center p-5">
                                <h5 class="text-muted mb-4">–î–æ—Å—Ç—É–ø –∫ –≤–∏–¥–µ–æ-–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∑–∞—â–∏—â–µ–Ω</h5>
                                <div class="alert alert-info">
                                    <strong>–¢–µ—Å—Ç–æ–≤—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:</strong><br>
                                    <strong>admin</strong> / password123 &nbsp;|&nbsp;
                                    <strong>user</strong> / user123 &nbsp;|&nbsp;
                                    <strong>test</strong> / test123
                                </div>
                                <a href="/" class="btn btn-primary">–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é</a>
                            </div>
                        </div>
                    </div>
                </body>
                </html>
            `);
        }

        console.log('–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É —Å –¥–∞–Ω–Ω—ã–º–∏:', parsedUrl.query);
        
        const name = parsedUrl.query.name || '–±–µ–∑ –∏–º–µ–Ω–∏';
        const email = parsedUrl.query.email || '–Ω–µ —É–∫–∞–∑–∞–Ω';
        const age = parsedUrl.query.age || '–Ω–µ —É–∫–∞–∑–∞–Ω';
        const color = parsedUrl.query.color || 'text-primary';
        const lang = parsedUrl.query.lang || 'ru';

        // –í–∞–ª–∏–¥–∞—Ü–∏—è
        if (!name || name.trim() === '') {
            res.writeHead(400, {'Content-Type': 'text/html; charset=utf-8'});
            return res.end('–û—à–∏–±–∫–∞: –ò–º—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ');
        }

        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é
        const session = handleSession(req, res);
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ Cookie (–û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø)
        setCookie(res, 'userName', name, { 
            maxAge: 86400, // 24 —á–∞—Å–∞
            path: '/',
            sameSite: 'Lax'
        });
        setCookie(res, 'userEmail', email, { 
            maxAge: 86400,
            path: '/', 
            sameSite: 'Lax'
        });
        setCookie(res, 'userColor', color, { 
            maxAge: 86400,
            path: '/',
            sameSite: 'Lax'
        });
        setCookie(res, 'userAge', age, { 
            maxAge: 86400,
            path: '/',
            sameSite: 'Lax'
        });

        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ Cookie –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        const cookies = parseCookies(req.headers.cookie);

        // –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å Cookie –∏ —Å–µ—Å—Å–∏–µ–π
        const resultHtml = `
        <!DOCTYPE html>
        <html lang="${lang}">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</title>
            <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.8/dist/css/bootstrap.min.css" rel="stylesheet">
            <style>
                .text-purple { color: #6f42c1 !important; }
                .cookie-card { border-left: 4px solid #28a745; }
                .session-card { border-left: 4px solid #007bff; }
                .user-card { border-left: 4px solid #6f42c1; }
            </style>
        </head>
        <body class="bg-light">
            <div class="container mt-4">
                <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ü–≤–µ—Ç–æ–º -->
                <div class="text-center mb-4 ${color}">
                    <h1 class="display-4 fw-bold">–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å</h1>
                    <p class="lead">–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ Cookie –∏ —Å–µ—Å—Å–∏–∏</p>
                </div>

                <div class="row g-4">
                    <!-- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ -->
                    <div class="col-lg-6">
                        <div class="card shadow-sm user-card h-100">
                            <div class="card-header bg-white">
                                <h5 class="mb-0">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ</h5>
                            </div>
                            <div class="card-body">
                                <p><strong>–ò–º—è:</strong> ${name}</p>
                                <p><strong>Email:</strong> ${email}</p>
                                <p><strong>–í–æ–∑—Ä–∞—Å—Ç:</strong> ${age}</p>
                                <p><strong>–í—ã–±—Ä–∞–Ω–Ω—ã–π —Ü–≤–µ—Ç:</strong> 
                                    <span class="${color} fw-bold">${color.replace('text-', '').toUpperCase()}</span>
                                </p>
                                <p><strong>–í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏:</strong> ${new Date().toLocaleString('ru-RU')}</p>
                            </div>
                        </div>
                    </div>

                    <!-- –î–∞–Ω–Ω—ã–µ –∏–∑ Cookie -->
                    <div class="col-lg-6">
                        <div class="card shadow-sm cookie-card h-100">
                            <div class="card-header bg-white">
                                <h5 class="mb-0">–î–∞–Ω–Ω—ã–µ –∏–∑ Cookie</h5>
                            </div>
                            <div class="card-body">
                                ${Object.entries(cookies).map(([key, value]) => `
                                    <p><strong>${key}:</strong> ${value}</p>
                                `).join('')}
                                <div class="alert alert-info mt-3">
                                    <small>–≠—Ç–∏ –¥–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –≤–∞—à–µ–º –±—Ä–∞—É–∑–µ—Ä–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∑–∞–ø—Ä–æ—Å–µ</small>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Å—Å–∏–∏ -->
                    <div class="col-12">
                        <div class="card shadow-sm session-card">
                            <div class="card-header bg-white">
                                <h5 class="mb-0">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Å—Å–∏–∏</h5>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-4">
                                        <p><strong>ID —Å–µ—Å—Å–∏–∏:</strong><br>
                                        <small class="text-muted">${session.sessionId}</small></p>
                                    </div>
                                    <div class="col-md-4">
                                        <p><strong>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å–µ—â–µ–Ω–∏–π:</strong><br>
                                        <span class="fs-4 ${color}">${session.visitCount}</span></p>
                                    </div>
                                    <div class="col-md-4">
                                        <p><strong>–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–∏–∑–∏—Ç:</strong><br>
                                        ${session.lastVisit}</p>
                                    </div>
                                </div>
                                <div class="alert alert-warning mt-3">
                                    <small>–°–µ—Å—Å–∏—è —Ö—Ä–∞–Ω–∏—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏ –∫–∞–∂–¥–æ–º –ø–æ—Å–µ—â–µ–Ω–∏–∏</small>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è -->
                    <div class="col-12 text-center">
                        <div class="d-grid gap-2 d-md-block">
                            <a href="/" class="btn btn-primary btn-lg px-4">–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–æ—Ä–º—É —Å–Ω–æ–≤–∞</a>
                            <a href="/cookies" class="btn btn-info btn-lg px-4">–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ Cookie</a>
                            <button onclick="clearCookies()" class="btn btn-outline-danger btn-lg px-4">–û—á–∏—Å—Ç–∏—Ç—å Cookie</button>
                        </div>
                    </div>
                </div>
            </div>

            <script>
                function clearCookies() {
                    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ Cookie?')) {
                        document.cookie.split(";").forEach(function(c) {
                            const cookie = c.trim();
                            const eqPos = cookie.indexOf("=");
                            const name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;
                            document.cookie = name + "=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;";
                        });
                        alert('Cookie –æ—á–∏—â–µ–Ω—ã! –°—Ç—Ä–∞–Ω–∏—Ü–∞ –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞.');
                        location.reload();
                    }
                }

                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ Cookie
                console.log('–¢–µ–∫—É—â–∏–µ Cookie:', document.cookie);
                console.log('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Å—Å–∏–∏:', {
                    visitCount: ${session.visitCount},
                    lastVisit: '${session.lastVisit}',
                    sessionId: '${session.sessionId}'
                });
            </script>
        </body>
        </html>
        `;

        res.writeHead(200, {'Content-Type': 'text/html; charset=utf-8'});
        res.end(resultHtml);
        console.log('–û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω (–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)');
        console.log('–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã Cookie –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', name);
        console.log('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Å—Å–∏–∏:', session);
        return;
    }

    // –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ - 404
    res.writeHead(404);
    res.end('Not Found');
});

server.listen(3000, '0.0.0.0', () => {
    console.log('–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://0.0.0.0:3000');
    console.log('–ó–∞—â–∏—â–µ–Ω–Ω—ã–µ endpoints (—Ç—Ä–µ–±—É—é—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏):');
    console.log('   GET /process');
    console.log('–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:');
    console.log('   GET /              - –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å —Ñ–æ—Ä–º–æ–π');
    console.log('   GET /cookies       - –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö Cookie');
    console.log('–§—É–Ω–∫—Ü–∏–∏: Cookie, —Å–µ—Å—Å–∏–∏, –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è');
    console.log('–°–µ—Å—Å–∏–∏ –≤ –ø–∞–º—è—Ç–∏:', Object.keys(sessions).length);
});